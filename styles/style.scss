// style.scss

@function Array($array, $element, $key: null) {
	@if $key {
		@return map-get(map-get($array, $element), $key);
	} @else {
		@return map-get($array, $element);
	}
}
@function Color($name, $shade: null) {
	$color: #F037C1;
	// Defined error codes
	$error_name: "The color '#{$name}' doesn't exist";
	$error_shade: "The color '#{$name}' doesn't have a shade named '#{$shade}'";
	// Assign main colors
	@if $shade == null {
		@if $name == 'main' {
			$color: #43467F;
		} @else if $name == 'sky' {
			$color: #DFE3E8;
		} @else if $name == 'ink' {
			$color: #212B36;
		} @else if $name == 'purple' {
			$color: #9C6ADE;
		} @else if $name == 'indigo' {
			$color: #5C6AC4;
		} @else if $name == 'blue' {
			$color: #006FBB;
		} @else if $name == 'teal' {
			$color: #47C1BF;
		} @else if $name == 'green' {
			$color: #50B83C;
		} @else if $name == 'yellow' {
			$color: #EEC200;
		} @else if $name == 'orange' {
			$color: #F49342;
		} @else if $name == 'red' {
			$color: #DE3618;
		}
		// Add extra colors here:
		@else if $name == 'white' {
			$color: #FFFFFF;
		} @else {
			@error $error_name;
		}
	}
	// Assign shades of color
	@else {
		@if $name == 'main' {
			@if $shade == 'light' {
				$color: #B3B5CB;
			} @else if $shade == 'dark' {
				$color: #1C2260;
			} @else if $shade == 'darker' {
				$color: #00044C;
			} @else {
				@error $error_shade;
			}
		} @else if $name == 'sky' {
			@if $shade == 'lighter' {
				$color: #F9FAFB;
			} @else if $shade == 'light' {
				$color: #F4F6F8;
			} @else if $shade == 'dark' {
				$color: #C4CDD5;
			} @else {
				@error $error_shade;
			}
		} @else if $name == 'ink' {
			@if $shade == 'lightest' {
				$color: #919EAB;
			} @else if $shade == 'lighter' {
				$color: #637381;
			} @else if $shade == 'light' {
				$color: #454F5B;
			} @else {
				@error $error_shade;
			}
		} @else if $name == 'purple' {
			@if $shade == 'lighter' {
				$color: #F6F0FD;
			} @else if $shade == 'light' {
				$color: #E3D0FF;
			} @else if $shade == 'dark' {
				$color: #50248F;
			} @else if $shade == 'darker' {
				$color: #230051;
			} @else if $shade == 'text' {
				$color: #50495A;
			} @else {
				@error $error_shade;
			}
		} @else if $name == 'indigo' {
			@if $shade == 'lighter' {
				$color: #F4F5FA;
			} @else if $shade == 'light' {
				$color: #B3BCF5;
			} @else if $shade == 'dark' {
				$color: #202E78;
			} @else if $shade == 'darker' {
				$color: #000639;
			} @else if $shade == 'text' {
				$color: #3E4155;
			} @else {
				@error $error_shade;
			}
		} @else if $name == 'blue' {
			@if $shade == 'lighter' {
				$color: #F4F5FA;
			} @else if $shade == 'light' {
				$color: #B3BCF5;
			} @else if $shade == 'dark' {
				$color: #202E78;
			} @else if $shade == 'darker' {
				$color: #000639;
			} @else if $shade == 'text' {
				$color: #3E4155;
			} @else {
				@error $error_shade;
			}
		} @else if $name == 'teal' {
			@if $shade == 'lighter' {
				$color: #E0F5F5;
			} @else if $shade == 'light' {
				$color: #B7ECEC;
			} @else if $shade == 'dark' {
				$color: #00848E;
			} @else if $shade == 'darker' {
				$color: #003135;
			} @else if $shade == 'text' {
				$color: #405352;
			} @else {
				@error $error_shade;
			}
		} @else if $name == 'green' {
			@if $shade == 'lighter' {
				$color: #E3F1DF;
			} @else if $shade == 'light' {
				$color: #BBE5B3;
			} @else if $shade == 'dark' {
				$color: #108043;
			} @else if $shade == 'darker' {
				$color: #173630;
			} @else if $shade == 'text' {
				$color: #414F3E;
			} @else {
				@error $error_shade;
			}
		} @else if $name == 'yellow' {
			@if $shade == 'lighter' {
				$color: #FCF1CD;
			} @else if $shade == 'light' {
				$color: #FFEA8A;
			} @else if $shade == 'dark' {
				$color: #8A6116;
			} @else if $shade == 'darker' {
				$color: #573B00;
			} @else if $shade == 'text' {
				$color: #595130;
			} @else {
				@error $error_shade;
			}
		} @else if $name == 'orange' {
			@if $shade == 'lighter' {
				$color: #FCEBDB;
			} @else if $shade == 'light' {
				$color: #FFC58B;
			} @else if $shade == 'dark' {
				$color: #C05717;
			} @else if $shade == 'darker' {
				$color: #4A1504;
			} @else if $shade == 'text' {
				$color: #594430;
			} @else {
				@error $error_shade;
			}
		} @else if $name == 'red' {
			@if $shade == 'lighter' {
				$color: #FBEAE5;
			} @else if $shade == 'light' {
				$color: #FEAD9A;
			} @else if $shade == 'dark' {
				$color: #BF0711;
			} @else if $shade == 'darker' {
				$color: #330101;
			} @else if $shade == 'text' {
				$color: #583C35;
			} @else {
				@error $error_shade;
			}
		} @else {
			@error $error_name;
		}
	} @return $color;
}
@function ColSize($size) {
	$value: 12 / $size;
	$value: 100% / $value;
	@return $value;
}
@mixin size($width, $height) {
	height: $height;
	width: $width;
}

@import 'header';
@import 'base';
@import 'footer';
@import 'responsive';
@import 'typeface';

hr {
	border-color: Color('sky', 'lighter');
	color: Color('sky', 'lighter');
	display: inline-block;
	width: 100%;
}
ul, ol, dl {
	max-width: 30rem;
	&.noIndent {
		padding-left: 0;
	}
	&.smallIndent {
		padding-left: 1.1rem;
	}
	&.noStyle {
		list-style: none;
	}
}

.ColorPaletteWrapper {
	display: flex;
	flex-wrap: wrap;
	margin-left: -1.6rem;
}
.ColorPalette {
	// flex-basis: 100% / 6;
	flex-grow: 0;
	flex: 1 1 14rem;
	padding-top: 2rem;
	padding-left: 1.6rem;
}
.ColorPaletteShade {
	display: flex;
	align-items: center;
	height: 3.4rem;
	padding-right: 1rem;
	padding-left: 1rem;
	font-size: 1rem;
	color: Color('white');
	background-color: Color('sky', 'lighter');
	&:first-child {
		border-top-left-radius: .6rem;
		border-top-right-radius: .6rem;
	}
	&:last-child {
		border-bottom-left-radius: .6rem;
		border-bottom-right-radius: .6rem;
	}
	&.hasDarkText {
		color: Color('ink');
	}
	&.isExpanded {
		height: 4rem;
	}
}
.ColorPaletteLabel, .ColorPaletteValue {
	display: block;
	flex: 1 1 100%;
}
.ColorPaletteValue {
	text-align: right;
	white-space: nowrap;
}

#CSS-Selectors {
	background: Color('sky', 'dark');
	border-collapse: collapse;
	text-align: left;
	width: 100%;
	th {
		border-bottom: 2pt solid black;
		font-weight: 500;
		text-transform: uppercase;
	}
	td {
		vertical-align: top;
	}
	td:first-child {
		font-size: 10pt;
		text-transform: uppercase;
	}
}

/* TESTING PROPERTIES */
.debug, .debug * {
	background-color: rgba(0, 0, 255, .04);
	border: 1px solid rgb(212, 44, 190);
	min-height: 40px;
}
.hasBorder {
	border: 1px solid rgb(212, 44, 190);
}